{
  "description": "A foundation for scalable desktop apps",
  "version": "1.0.0",
  "productName": "XGen",
  "keywords": [
    "electron",
    "boilerplate",
    "react",
    "typescript",
    "ts",
    "sass",
    "webpack",
    "hot",
    "reload"
  ],
  "homepage": "https://github.com/stevenCharles1325/pos-client#readme",
  "bugs": {
    "url": "https://github.com/stevenCharles1325/pos-client/issues"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:stevenCharles1325/pos-client.git"
  },
  "license": "MIT",
  "author": {
    "name": "Electron React Boilerplate Maintainers",
    "email": "electronreactboilerplate@gmail.com",
    "url": "https://electron-react-boilerplate.js.org"
  },
  "contributors": [
    {
      "name": "Amila Welihinda",
      "email": "amilajack@gmail.com",
      "url": "https://github.com/amilajack"
    }
  ],
  "main": "./src/main/main.ts",
  "scripts": {
    "dep:binaries:minio:linux": "mkdir -p assets/binaries/object-storage/linux/bin && cd assets/binaries/object-storage/linux/bin && wget https://dl.min.io/server/minio/release/linux-amd64/minio",
    "dep:binaries:minio:mac": "mkdir -p assets/binaries/object-storage/mac/bin && cd assets/binaries/object-storage/mac/bin && wget https://dl.min.io/server/minio/release/darwin-arm64/minio",
    "dep:binaries:minio:win": "mkdir -p assets/binaries/object-storage/win/bin && cd assets/binaries/object-storage/win/bin && wget https://dl.min.io/server/minio/release/windows-amd64/minio.exe",
    "dep:binaries:minio": "concurrently \"npm run dep:binaries:minio:linux\" \"npm run dep:binaries:minio:mac\" \"npm run dep:binaries:minio:win\"",
    "migration:fresh": "npm run schema:drop && npm run migration:run",
    "migration:refresh": "npm run migration:rollback && npm run migration:run",
    "migration:run": "cd release/app && npm run migration:run",
    "migration:show": "cd release/app && npm run migration:show",
    "migration:generate": "cd release/app && npm run migration:generate",
    "migration:create": "cd release/app && npm run migration:create --",
    "migration:rollback": "cd release/app && npm run migration:revert",
    "schema:drop": "cd release/app && npm run schema:drop",
    "typeorm:version": "cd release/app && npm run typeorm:version",
    "build": "concurrently \"npm run build:db:migrations\" \"npm run build:main\" \"npm run build:renderer\"",
    "build:db:seeders": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.db.seeders.ts",
    "build:db:datasource": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.db.datasource.ts",
    "build:db:migrations": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.db.migrations.ts",
    "build:db:models": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.db.models.ts",
    "build:main": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.main.prod.ts",
    "build:renderer": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.prod.ts",
    "postinstall": "ts-node .erb/scripts/check-native-dep.js && electron-builder install-app-deps && cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.ts",
    "lint": "cross-env NODE_ENV=development eslint . --ext .js,.jsx,.ts,.tsx",
    "package": "ts-node ./.erb/scripts/clean.js dist && npm run build && electron-builder build --publish never",
    "rebuild": "electron-rebuild --parallel --types prod,dev,optional --module-dir release/app",
    "start": "ts-node ./.erb/scripts/check-port-in-use.js && npm run start:renderer",
    "start:main": "cross-env NODE_ENV=development electronmon -r ts-node/register/transpile-only .",
    "start:preload": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.preload.dev.ts",
    "start:renderer": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack serve --config ./.erb/configs/webpack.config.renderer.dev.ts",
    "test": "jest",
    "clean": "rimraf node_modules release/app/node_modules package-lock.json release/app/package-lock.json",
    "cleanbuild": "rimraf release/build"
  },
  "browserslist": [],
  "prettier": {
    "singleQuote": true,
    "overrides": [
      {
        "files": [
          ".prettierrc",
          ".eslintrc"
        ],
        "options": {
          "parser": "json"
        }
      }
    ]
  },
  "jest": {
    "moduleDirectories": [
      "node_modules",
      "release/app/node_modules",
      "src"
    ],
    "moduleFileExtensions": [
      "js",
      "jsx",
      "ts",
      "tsx",
      "json"
    ],
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/.erb/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "setupFiles": [
      "./.erb/scripts/check-build-exists.ts"
    ],
    "testEnvironment": "jsdom",
    "testEnvironmentOptions": {
      "url": "http://localhost/"
    },
    "testPathIgnorePatterns": [
      "release/app/dist",
      ".erb/dll"
    ],
    "transform": {
      "\\.(ts|tsx|js|jsx)$": "ts-jest"
    }
  },
  "dependencies": {
    "@emotion/react": "^11.11.1",
    "@emotion/styled": "^11.11.0",
    "@mui/icons-material": "^5.14.3",
    "@mui/material": "^5.14.12",
    "@mui/x-charts": "^6.0.0-alpha.17",
    "@mui/x-data-grid": "^6.16.0",
    "@mui/x-date-pickers": "^6.18.1",
    "@tanstack/react-query": "^4.36.1",
    "@types/bcrypt": "^5.0.0",
    "app-root-dir": "^1.0.2",
    "axios": "^1.6.4",
    "barcode-validator": "^1.0.2",
    "check-disk-space": "^3.4.0",
    "circular-dependency-plugin": "^5.2.2",
    "d3-color": "^3.1.0",
    "d3-interpolate": "^3.0.1",
    "dayjs": "^1.11.10",
    "dotenv": "^16.3.1",
    "dotenv-expand": "^5.1.0",
    "electron-debug": "^3.2.0",
    "electron-log": "^4.4.8",
    "electron-router-dom": "^1.0.5",
    "electron-secure-pos-printer": "^1.1.4",
    "electron-store": "^8.1.0",
    "electron-updater": "^5.3.0",
    "hotkeys-js": "^3.12.2",
    "ioredis": "^5.3.2",
    "localforage": "^1.10.0",
    "lodash.debounce": "^4.0.8",
    "match-sorter": "^6.3.1",
    "minio": "^7.1.3",
    "mui-daterange-picker": "^1.0.5",
    "process": "^0.11.10",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-liquid-gauge": "^1.2.4",
    "react-number-format": "^5.3.1",
    "react-router-dom": "^6.16.0",
    "react-virtualized": "^9.22.5",
    "react-virtualized-image-measurer": "^0.4.0",
    "reactjs-eventemitter": "^1.0.6",
    "require-all": "^3.0.0",
    "simple-peer-wrapper": "^0.0.5",
    "sort-by": "^1.2.0",
    "string-sanitizer": "^2.0.2",
    "zustand": "^4.4.1"
  },
  "devDependencies": {
    "@electron/notarize": "^1.2.3",
    "@electron/rebuild": "^3.2.13",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.10",
    "@svgr/webpack": "^8.0.1",
    "@teamsupercell/typings-for-css-modules-loader": "^2.5.2",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^14.0.0",
    "@types/app-root-dir": "^0.1.2",
    "@types/circular-dependency-plugin": "^5.0.7",
    "@types/d3-color": "^3.1.3",
    "@types/d3-interpolate": "^3.0.4",
    "@types/jest": "^29.5.2",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/lodash.debounce": "^4.0.8",
    "@types/minio": "^7.1.1",
    "@types/node": "^20.8.9",
    "@types/node-hid": "^1.3.4",
    "@types/node-schedule": "^2.1.5",
    "@types/react": "^18.2.8",
    "@types/react-dom": "^18.2.4",
    "@types/react-test-renderer": "^18.0.0",
    "@types/react-virtualized": "^9.21.23",
    "@types/require-all": "^3.0.3",
    "@types/simple-peer": "^9.11.5",
    "@types/terser-webpack-plugin": "^5.0.4",
    "@types/validator": "^13.11.1",
    "@types/w3c-web-hid": "^1.0.6",
    "@types/w3c-web-usb": "^1.0.10",
    "@types/webpack-bundle-analyzer": "^4.6.0",
    "@types/webpack-env": "^1.18.3",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "autoprefixer": "^10.4.14",
    "browserslist-config-erb": "^0.0.3",
    "chalk": "^4.1.2",
    "concurrently": "^8.1.0",
    "core-js": "^3.30.2",
    "cross-env": "^7.0.3",
    "css-loader": "^6.8.1",
    "css-minimizer-webpack-plugin": "^5.0.0",
    "detect-port": "^1.5.1",
    "electron": "^25.0.1",
    "electron-builder": "^24.2.1",
    "electron-devtools-installer": "^3.2.0",
    "electron-rebuild": "^3.2.9",
    "electronmon": "^2.0.2",
    "eslint": "^8.42.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-erb": "^4.0.6",
    "eslint-import-resolver-typescript": "^3.5.5",
    "eslint-import-resolver-webpack": "^0.13.2",
    "eslint-plugin-compat": "^4.1.4",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jest": "^27.2.1",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "file-loader": "^6.2.0",
    "html-webpack-plugin": "^5.5.1",
    "husky": "^8.0.3",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "mini-css-extract-plugin": "^2.7.6",
    "postcss-loader": "^7.3.3",
    "prettier": "^2.8.8",
    "react-refresh": "^0.14.0",
    "react-test-renderer": "^18.2.0",
    "rimraf": "^5.0.5",
    "sass": "^1.62.1",
    "sass-loader": "^13.3.1",
    "style-loader": "^3.3.3",
    "tailwind-scrollbar": "^3.0.5",
    "tailwindcss": "^3.3.3",
    "terser-webpack-plugin": "^5.3.9",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "tsconfig-paths-webpack-plugin": "^4.0.1",
    "typescript": "^5.1.3",
    "url-loader": "^4.1.1",
    "webpack": "^5.85.0",
    "webpack-bundle-analyzer": "^4.9.0",
    "webpack-cli": "^5.1.1",
    "webpack-dev-server": "^4.15.0",
    "webpack-merge": "^5.9.0"
  },
  "build": {
    "productName": "XGen",
    "appId": "org.erb.XGen",
    "asar": true,
    "asarUnpack": "**\\*.{node,dll}",
    "files": [
      "dist",
      "node_modules",
      "package.json"
    ],
    "afterSign": ".erb/scripts/notarize.js",
    "mac": {
      "target": {
        "target": "default",
        "arch": [
          "arm64",
          "x64"
        ]
      },
      "type": "distribution",
      "hardenedRuntime": true,
      "entitlements": "assets/entitlements.mac.plist",
      "entitlementsInherit": "assets/entitlements.mac.plist",
      "gatekeeperAssess": false
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis"
      ]
    },
    "linux": {
      "target": [
        "AppImage"
      ],
      "category": "Development"
    },
    "directories": {
      "app": "release/app",
      "buildResources": "assets",
      "output": "release/build"
    },
    "extraResources": [
      "./assets/**"
    ],
    "publish": {
      "provider": "github",
      "owner": "electron-react-boilerplate",
      "repo": "electron-react-boilerplate"
    }
  },
  "collective": {
    "url": "https://opencollective.com/electron-react-boilerplate-594"
  },
  "devEngines": {
    "node": ">=14.x",
    "npm": ">=7.x"
  },
  "electronmon": {
    "patterns": [
      "!**/**",
      "src/main/**",
      "!**/*.sqlite",
      "!**/*.sqlite-journal"
    ],
    "logLevel": "quiet"
  }
}
